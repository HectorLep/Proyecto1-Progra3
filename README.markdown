游뚜 Simulador de Log칤stica con Drones - Fase 2
Universidad Cat칩lica de TemucoFacultad de Ingenier칤a - Departamento de Ingenier칤a Inform치ticaINFO 1126 - Programaci칩n 3

Descripci칩n del Proyecto
Este proyecto implementa un sistema avanzado para la simulaci칩n y optimizaci칩n de una red log칤stica de drones aut칩nomos, desarrollado como soluci칩n a la problem치tica propuesta por Correos Chile. La aplicaci칩n permite generar redes de transporte complejas, visualizar nodos y rutas sobre un mapa interactivo georreferenciado (Temuco), calcular trayectos 칩ptimos considerando la autonom칤a de los drones y generar anal칤ticas detalladas sobre el rendimiento de la red.
El sistema cuenta con una interfaz de usuario interactiva construida con Streamlit y una potente API RESTful desarrollada con FastAPI, permitiendo tanto la operaci칩n visual como la integraci칩n con servicios externos.
Caracter칤sticas Principales

Visualizaci칩n Geoespacial Interactiva: Mapa din치mico con Folium que muestra nodos (almacenes, estaciones de recarga, clientes), aristas y rutas calculadas en tiempo real.
Simulaci칩n de Rutas con Autonom칤a: Implementaci칩n del algoritmo de Dijkstra para encontrar la ruta m치s corta, con una l칩gica avanzada que fuerza paradas en estaciones de recarga si la autonom칤a del dron (50 unidades de costo) es superada en un tramo.
An치lisis de Red: Visualizaci칩n del 츼rbol de Expansi칩n M칤nima (MST) sobre el mapa usando el algoritmo de Kruskal para analizar la conectividad m칤nima de la red.
API RESTful Completa: Backend robusto con FastAPI que expone endpoints para gestionar y consultar clientes, 칩rdenes, y obtener estad칤sticas y reportes de la simulaci칩n.
Reportes en PDF: Generaci칩n de informes detallados y profesionales bajo demanda, tanto desde la interfaz como desde la API, con res칰menes, tablas y gr치ficos.
Anal칤tica de Datos Avanzada: Uso de un 츼rbol AVL para registrar la frecuencia de las rutas y ofrecer estad칤sticas sobre los nodos y clientes m치s visitados.

Gu칤a de Instalaci칩n
Sigue estos pasos para configurar y ejecutar el proyecto en un entorno local.
1. Clonar el Repositorio
git clone https://github.com/HectorLep/Proyecto1-Progra3.git
cd Proyecto1-Progra3

2. Crear y Activar un Entorno Virtual
Es fundamental usar un entorno virtual para aislar las dependencias del proyecto.
Opci칩n A (Usando venv - Est치ndar de Python):
# Crear el entorno
python3 -m venv venv

# Activar el entorno (en Linux/macOS)
source venv/bin/activate

Opci칩n B (Usando conda - Recomendado para el equipo):
# Crear el entorno (puedes cambiar 'drones_env' por el nombre que prefieras)
conda create --name drones_env python=3.11

# Activar el entorno
conda activate drones_env

3. Instalar Dependencias
Una vez que el entorno virtual est칠 activado, instala todas las librer칤as necesarias ejecutando el siguiente comando:
pip install -r requirements.txt

(Aseg칰rate de tener un archivo requirements.txt en tu repositorio con todas las librer칤as necesarias).
C칩mo Ejecutar la Aplicaci칩n
Con el entorno activado y las dependencias instaladas, ejecuta el siguiente comando desde la carpeta ra칤z del proyecto:
streamlit run app.py

Esto iniciar치 la aplicaci칩n completa, incluyendo tanto la interfaz de Streamlit como el servidor de la API en segundo plano.

La interfaz principal estar치 disponible en tu navegador en: http://localhost:8501
La documentaci칩n de la API estar치 disponible en: http://localhost:8001/docs

Autores

Hector: HectorLep
Maximiliano: Mxtsi7
Cristian: Insert-name-115
Agustin: sonickiller39
Jose: JJ3972433
